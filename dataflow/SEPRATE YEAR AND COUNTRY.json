{
	"name": "SEPRATE YEAR AND COUNTRY",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText13",
						"type": "DatasetReference"
					},
					"name": "READTHEDATA"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText14",
						"type": "DatasetReference"
					},
					"name": "writetoadls"
				}
			],
			"transformations": [
				{
					"name": "TOSEPRATEYEARANDCOUNTRY"
				},
				{
					"name": "selectedrows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ROW as string,",
				"          COUNTRY as string,",
				"          SALES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> READTHEDATA",
				"READTHEDATA derive(YEAR = toInteger(trim(right(COUNTRY,6), '()')),",
				"          COUNTRY = toString(left(COUNTRY, length(COUNTRY)-6))) ~> TOSEPRATEYEARANDCOUNTRY",
				"TOSEPRATEYEARANDCOUNTRY select(mapColumn(",
				"          COUNTRY,",
				"          SALES,",
				"          YEAR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectedrows",
				"selectedrows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Series_reference as string,",
				"          Period as string,",
				"          Data_value as string,",
				"          Suppressed as string,",
				"          STATUS as string,",
				"          UNITS as string,",
				"          Magnitude as string,",
				"          Subject as string,",
				"          Group as string,",
				"          Series_title_1 as string,",
				"          Series_title_2 as string,",
				"          Series_title_3 as string,",
				"          Series_title_4 as string,",
				"          Series_title_5 as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> writetoadls"
			]
		}
	}
}