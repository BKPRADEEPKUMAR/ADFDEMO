{
	"name": "pivot",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable109",
						"type": "DatasetReference"
					},
					"name": "pivotdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "adlsdestination",
						"type": "DatasetReference"
					},
					"name": "writedestition"
				}
			],
			"transformations": [
				{
					"name": "pivot1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     limit: 100,",
				"     isolationLevel: 'READ_COMMITTED',",
				"     format: 'table') ~> pivotdata",
				"derivedColumn1 pivot(groupBy(Size),",
				"     pivotBy(Color, ['Multi']),",
				"     Avg = avg(StandardCost),",
				"     columnNaming: '$N_$V_caculate',",
				"     lateral: true) ~> pivot1",
				"pivotdata derive(Size = iif(isNull(Size)||Size=='null', 'na',Size),",
				"          Color = iif(isNull(Color)||Color=='null', 'na',Color)) ~> derivedColumn1",
				"pivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ROW as string,",
				"          COUNTRY as string,",
				"          YEARS as string,",
				"          SALES as string,",
				"          CUST_ID as string",
				"     ),",
				"     partitionFileNames:['pivot.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> writedestition"
			]
		}
	}
}